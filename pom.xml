<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.poorknight</groupId>
	<artifactId>my-recipe-connection</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>MyRecipeConnection</name>

	<properties>

		<!-- PUT HERE BY OPENSHIFT -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source> <!-- USED TO BE 1.8 FROM OPENSHIFT -->
		<maven.compiler.target>1.8</maven.compiler.target> <!-- USED TO BE 1.8 FROM OPENSHIFT -->
		<!-- <maven.compiler.executable>${env.OPENSHIFT_WILDFLY_DIR}usr/lib/jvm/jdk1.8.0_05/bin/javac</maven.compiler.executable> -->
		<maven.compiler.fork>true</maven.compiler.fork>

		<!-- added by me -->
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>


		<!-- Dependency Versions -->

		<jboss-javaee-7.0-with-all.version>8.1.0.Final</jboss-javaee-7.0-with-all.version>
		<arquillian-bom.version>1.1.5.Final</arquillian-bom.version>
		<junit.version>4.11</junit.version>
		<arquillian-weld-ee-embedded-1.1.version>1.0.0.CR8</arquillian-weld-ee-embedded-1.1.version>
		<arquillian-warp.version>1.0.0.Alpha7</arquillian-warp.version>
		<arquillian-drone-bom.version>1.3.1.Final</arquillian-drone-bom.version>
		<!-- <arquillian-persistence-integration-tests.version>1.0.0.Alpha7</arquillian-persistence-integration-tests.version> -->
		<arquillian-persistence.version>1.0.0.Alpha6</arquillian-persistence.version>
		<selenium-bom.version>2.42.2</selenium-bom.version>
		<weld-core.version>2.2.4.Final</weld-core.version>
		<h2.version>1.4.180</h2.version>
		<hibernate-validator-cdi.version>5.1.2.Final</hibernate-validator-cdi.version>
		<hibernate-validator-annotation-processor.version>5.1.2.Final</hibernate-validator-annotation-processor.version>
		<slf4j-simple.version>1.7.7</slf4j-simple.version>

		<commons-lang.version>2.6</commons-lang.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<commons-beanutils.version>1.9.2</commons-beanutils.version>
		<commons-io.version>2.4</commons-io.version>
		<guava.version>18.0</guava.version>
		<lombok.version>1.16.6</lombok.version>

		<mockito-all.version>1.9.5</mockito-all.version>
		<hamcrest-library.version>1.3</hamcrest-library.version>
		<hamcrest-core.version>1.3</hamcrest-core.version>
		<powermock.version>1.5.6</powermock.version>
		<cglib.version>2.2.2</cglib.version>

		<!-- Plugin Versions -->

		<maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.17</maven-failsafe-plugin.version>
		<maven-war-plugin.version>2.4</maven-war-plugin.version>
		<wildfly-maven-plugin.version>1.0.2.Final</wildfly-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.1.201405082137</jacoco-maven-plugin.version>
		<findbugs-maven-plugin.version>3.0.0</findbugs-maven-plugin.version>
		<maven-checkstyle-plugin.version>2.12.1</maven-checkstyle-plugin.version>
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<jasmine-maven-plugin.version>1.3.1.5</jasmine-maven-plugin.version>

		<!-- path to jdk on local machine - not sure what the behavior will be 
			in any other environment - probably nothing good -->

		<jdk.path>/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home</jdk.path>
		<jboss.home>/usr/local/opt/wildfly-as/libexec</jboss.home>

		<arquillian.jsfTest.browser>phantomjs</arquillian.jsfTest.browser>
		<!-- <arquillian.jsfTest.browser>chrome</arquillian.jsfTest.browser> -->
		<!-- <arquillian.jsfTest.browser>internetExplorer</arquillian.jsfTest.browser> -->
		<!-- <arquillian.jsfTest.browser>firefox</arquillian.jsfTest.browser> -->

	</properties>


	<!-- ******************************************************************************************** -->
	<!-- ***** DEPENDENCY MANAGEMENT ***** -->
	<!-- ******************************************************************************************** -->

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-with-all</artifactId>
				<version>${jboss-javaee-7.0-with-all.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian-bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<scope>test</scope>
				<version>${junit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.arquillian.selenium</groupId>
				<artifactId>selenium-bom</artifactId>
				<version>${selenium-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<!-- ******************************************************************************************** -->
	<!-- ***** DEPENDENCIES ***** -->
	<!-- ******************************************************************************************** -->

	<dependencies>

		<!-- javaee setup -->

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core</artifactId>
			<version>${weld-core.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-cdi</artifactId>
			<version>${hibernate-validator-cdi.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- 3rd party libs -->

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test dependencies -->

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest-core.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest-library.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito-all.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons-beanutils.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>


		<!-- ******************************************************************************************** -->
		<!-- ***** PLUGIN MANAGEMENT ***** -->
		<!-- ******************************************************************************************** -->

		<pluginManagement>

			<plugins>
				<plugin>
					<groupId>com.github.searls</groupId>
					<artifactId>jasmine-maven-plugin</artifactId>
					<version>${jasmine-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<jsSrcDir>src/main/webapp/resources/js</jsSrcDir>
						<jsTestSrcDir>src/test/webapp/js/specs</jsTestSrcDir>
						<preloadSources>
							<source>src/main/webapp/resources/js/external/jquery-1.11.2.min.js</source>
							<source>src/test/webapp/js/jasmine/dependencies/jasmine-fixture.js</source>
							<source>src/test/webapp/js/jasmine/dependencies/jasmine-jquery.js</source>
						</preloadSources>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<forkCount>1</forkCount>
						<reuseForks>true</reuseForks>
						<redirectTestOutputToFile>false</redirectTestOutputToFile>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<executions>
						<!-- Add a new source directory to our build, to pick up the JPA generated 
							files (like Recipe_ ) -->
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/main/generated</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-maven-plugin</artifactId>
					<version>${wildfly-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


			</plugins>
		</pluginManagement>

		<!-- ******************************************************************************************** -->
		<!-- ***** PLUGINS ***** -->
		<!-- ******************************************************************************************** -->

		<plugins>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>

		</plugins>

	</build>


	<!-- ******************************************************************************************** -->
	<!-- ***** PROFILES ***** -->
	<!-- ******************************************************************************************** -->

	<profiles>

		<profile>
			<!-- Used for testing on jenkins - only unit tests, no Integration Tests -->
			<id>jenkins-tests</id>
			<!-- <properties> <maven.compiler.executable>${env.OPENSHIFT_WILDFLY_DIR}usr/lib/jvm/jdk1.8.0_05/bin/javac</maven.compiler.executable> 
				</properties> TO REACTIVATE JAVA 8 - UNCOMMENT THIS AND RENAME MARKER FILE 
				LOCATED IN 'C:\Users\Chris\git\recipeconnection\.openshift\marker' FROM 'java7' 
				to 'java8' (and change the eclipse settings -->

			<build>
				<plugins>
					<plugin>
						<groupId>com.github.searls</groupId>
						<artifactId>jasmine-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>

		</profile>

		<profile>
			<!-- Used for testing in eclipse - only unit tests, no Integration Tests 
				- same as jenkins build with the addition of jasmine -->
			<id>eclipse-tests</id>

			<build>
				<plugins>
					<plugin>
						<groupId>com.github.searls</groupId>
						<artifactId>jasmine-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<!-- THIS IS USED IN CONJUNCTION WITH THE JACOCO PLUGIN FOR (TEST COVERAGE 
				IN) JENKINS, BUT IT FAILS DUE TO OPENSHIFT SUCKING <plugin> <groupId>org.jacoco</groupId> 
				<artifactId>jacoco-maven-plugin</artifactId> <version>${jacoco-maven-plugin.version}</version> 
				<executions> <execution> <goals> <goal>prepare-agent</goal> </goals> </execution> 
				<execution> <id>report</id> <phase>prepare-package</phase> <goals> <goal>report</goal> 
				</goals> </execution> </executions> </plugin> -->
		</profile>

		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>jbosswildfly</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Used to deploy to localhost - only unit tests/jasmine tests, no Integration 
				Tests. -->
			<id>deploy-local</id>
			<build>
				<finalName>recipee7</finalName>
				<plugins>

					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>${maven-war-plugin.version}</version>
						<configuration>
							<outputDirectory>${basedir}/target</outputDirectory>
							<warName>recipee7</warName>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>com.github.searls</groupId>
						<artifactId>jasmine-maven-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>embedded-wildfly-tests</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>

				<!-- In memory database for testing persistence -->
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
					<scope>test</scope>
				</dependency>

				<!-- embedded widlfly container - must be installed on system - see arquillian.xml -->
				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-arquillian-container-embedded</artifactId>
					<version>8.1.0.Final</version>
				</dependency>


				<!-- <dependency> <groupId>org.wildfly.arquillian</groupId> <artifactId>wildfly-arquillian-container-embedded</artifactId> 
					<version>1.0.1.Final</version> <scope>test</scope> </dependency> -->

				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-embedded</artifactId>
					<version>8.1.0.Final</version>
				</dependency>

				<dependency>
					<groupId>sun.jdk</groupId>
					<artifactId>jconsole</artifactId>
					<version>jdk</version>
					<scope>system</scope>
					<systemPath>${jdk.path}/lib/jconsole.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-persistence-api</artifactId>
					<version>${arquillian-persistence.version}</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-persistence-impl</artifactId>
					<version>${arquillian-persistence.version}</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
					<version>1.7.2</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.jboss.arquillian.graphene</groupId>
					<artifactId>graphene-webdriver</artifactId>
					<version>2.0.3.Final</version>
					<type>pom</type>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-warp-jsf</artifactId>
					<version>${arquillian-warp.version}</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.wildfly.core</groupId>
					<artifactId>wildfly-controller-client</artifactId>
					<version>2.0.0.CR8</version>
				</dependency>

			</dependencies>

			<build>
				<finalName>test</finalName>
				<testResources>
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
				<plugins>

					<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
						<version>2.8</version> <executions> <execution> <id>unpack</id> <phase>process-test-classes</phase> 
						<goals> <goal>unpack</goal> </goals> <configuration> <artifactItems> <artifactItem> 
						<groupId>org.wildfly</groupId> <artifactId>wildfly-dist</artifactId> <version>8.1.0.Final</version> 
						<type>zip</type> <overWrite>false</overWrite> <outputDirectory>target</outputDirectory> 
						</artifactItem> </artifactItems> </configuration> </execution> </executions> 
						</plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
						<version>2.17</version> <configuration> <- Fork every test because it will 
						launch a separate AS instance -> <forkMode>always</forkMode> <systemPropertyVariables> 
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager> 
						<- the maven dependency plugin will have already downloaded the server on 
						/target -> <jboss.home>${project.basedir}/target/wildfly-8.1.0.Final</jboss.home> 
						<module.path>${project.basedir}/target/wildfly-8.1.0.Final/modules</module.path> 
						</systemPropertyVariables> <redirectTestOutputToFile>false</redirectTestOutputToFile> 
						</configuration> </plugin> -->

					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven-compiler-plugin.version}</version>
						<configuration>
							<source>${maven.compiler.source}</source>
							<target>${maven.compiler.target}</target>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<forkCount>1</forkCount>
							<reuseForks>true</reuseForks>
							<argLine>-Xmx2048m -XX:MaxPermSize=1024m</argLine>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<jboss.home>${jboss.home}</jboss.home>
								<module.path>${jboss.home}/modules</module.path>
							</systemPropertyVariables>
							<redirectTestOutputToFile>false</redirectTestOutputToFile>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<forkCount>1</forkCount>
							<reuseForks>false</reuseForks>
							<argLine>-Xmx2048m -XX:MaxPermSize=1024m</argLine>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<jboss.home>${jboss.home}</jboss.home>
								<module.path>${jboss.home}/modules</module.path>
							</systemPropertyVariables>
							<redirectTestOutputToFile>false</redirectTestOutputToFile>
						</configuration>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
							<execution>
								<id>verify</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>

							<!-- Add a new source directory to our build -->
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/main/generated</source>
									</sources>
								</configuration>
							</execution>

							<execution>
								<id>add-integration-test-sources</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<!-- Configures the source directory of our integration tests -->
									<sources>
										<source>src/integration-test/java</source>
									</sources>
								</configuration>
							</execution>

							<!-- Add a new resource directory to our build -->
							<!-- <execution> <id>add-integration-test-resources</id> <phase>generate-test-resources</phase> 
								<goals> <goal>add-test-resource</goal> </goals> <configuration> <resources> 
								<resource> ??<filtering>true</filtering>?? <directory>src/integration-test/resources</directory> 
								</resource> </resources> </configuration> </execution> -->
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.searls</groupId>
						<artifactId>jasmine-maven-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>
</project>

<!-- AFTER THE BUILD SECTION <reporting> <plugins> <plugin> <groupId>org.codehaus.mojo</groupId> 
	<artifactId>findbugs-maven-plugin</artifactId> <version>${findbugs-maven-plugin.version}</version> 
	<configuration> <findbugsXmlOutput>true</findbugsXmlOutput> <findbugsXmlWithMessages>true</findbugsXmlWithMessages> 
	<xmlOutput>true</xmlOutput> <fork>false</fork> </configuration> </plugin> 
	<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
	<version>${maven-checkstyle-plugin.version}</version> <reportSets> <reportSet> 
	<reports> <report>checkstyle</report> </reports> </reportSet> </reportSets> 
	</plugin> </plugins> </reporting> -->

<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> 
	<version>${maven-failsafe-plugin.version}</version> <executions> <execution> 
	<id>integration-test</id> <goals> <goal>integration-test</goal> </goals> 
	</execution> <execution> <id>verify</id> <goals> <goal>verify</goal> </goals> 
	</execution> </executions> </plugin> -->

<!-- <plugin> <groupId>org.bsc.maven</groupId> <artifactId>maven-processor-plugin</artifactId> 
	<executions> <execution> <id>process</id> <goals> <goal>process</goal> </goals> 
	<phase>generate-sources</phase> <configuration> <processors> <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor> 
	</processors> </configuration> </execution> </executions> <dependencies> 
	<dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-jpamodelgen</artifactId> 
	<version>4.3.4.Final</version> </dependency> </dependencies> </plugin> -->


<!-- <profile> < Used when pushing statistics to sonar - needs to build and 
	test in order to collect statistics > <id>sonar</id> < <properties> <maven.compiler.executable>${env.OPENSHIFT_WILDFLY_DIR}usr/lib/jvm/jdk1.8.0_05/bin/javac</maven.compiler.executable> 
	</properties> TO REACTIVATE JAVA 8 - UNCOMMENT THIS AND RENAME MARKER FILE 
	LOCATED IN 'C:\Users\Chris\git\recipeconnection\.openshift\marker' FROM 'java7' 
	to 'java8' (and change the eclipse settings > <dependencies> < enables CDI 
	for arquillian during testing phase - but not persistence > <dependency> 
	<groupId>org.jboss.arquillian.container</groupId> <artifactId>arquillian-weld-ee-embedded-1.1</artifactId> 
	<version>${arquillian-weld-ee-embedded-1.1.version}</version> <scope>test</scope> 
	</dependency> </dependencies> </profile> -->